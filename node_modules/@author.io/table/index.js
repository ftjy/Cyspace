// @author.io/table v1.1.1
// Copyright (c) 2021 Author.io
// Released under the MIT License.
function _classPrivateFieldGet(receiver,privateMap){return function _classApplyDescriptorGet(receiver,descriptor){return descriptor.get?descriptor.get.call(receiver):descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function _classApplyDescriptorSet(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const cut=(content,width,re)=>{if(width<1)throw new Error("Width must be at least 1.");let result=[content.substring(0,width)];if((content=content.substring(width)).length>width){const matches=content.match(re)||[];let remainder=content.substring(matches.join("").length);if(matches.length>0&&(result=result.concat(matches)),remainder.length>0&&remainder.length>width)if(maxMatch.test(remainder))result=result.concat(cut(remainder,width));else{let i=0;for(;remainder.length>0&&i<20;)i++,remainder.length<=width?(result.push(remainder),remainder=""):(result.push(remainder.substring(0,width)),remainder=remainder.substring(width))}else remainder>0&&result.push(remainder)}return result},pad=(content,width,position="right",char=" ")=>{if(content.length>=width)return content;switch(position){case"center":return content.padStart(Math.floor(content.length/2),char).padEnd(width,char);case"left":return content.padStart(width,char);default:return content.padEnd(width,char)}},fill=(count=0,char=" ")=>char.repeat(count),match=width=>new RegExp(`(.{0,${width}})[\\s\\n\\t(\\.\\s)]`,"g"),maxMatch=match(2e3);var _rows=new WeakMap,_cols=new WeakMap,_align=new WeakMap,_widths=new WeakMap,_tableWidth=new WeakMap,_tabWidth=new WeakMap,_max=new WeakMap,_cellspacing=new WeakMap,_margin=new WeakMap,_truncate=new WeakMap,_emptyCols=new WeakMap,_originalColumns=new WeakMap,_RE=new WeakMap,_fillChar=new WeakMap,_cleanText=new WeakMap,_expandall=new WeakMap,_prepared=new WeakMap,_prepare=new WeakMap;export default class Table{constructor(rows=[],align=[],maxWidths=[],tableWidth=80,margins=[0,0,0,0]){_rows.set(this,{writable:!0,value:void 0}),_cols.set(this,{writable:!0,value:new Map}),_align.set(this,{writable:!0,value:[]}),_widths.set(this,{writable:!0,value:[]}),_tableWidth.set(this,{writable:!0,value:void 0}),_tabWidth.set(this,{writable:!0,value:2}),_max.set(this,{writable:!0,value:1/0}),_cellspacing.set(this,{writable:!0,value:0}),_margin.set(this,{writable:!0,value:void 0}),_truncate.set(this,{writable:!0,value:[]}),_emptyCols.set(this,{writable:!0,value:[]}),_originalColumns.set(this,{writable:!0,value:[]}),_RE.set(this,{writable:!0,value:new Map}),_fillChar.set(this,{writable:!0,value:" "}),_cleanText.set(this,{writable:!0,value:content=>{content=content.replace(/\t/g,fill(_classPrivateFieldGet(this,_tabWidth)));const pattern=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))","\\x1B[[(?);]{0,2}(;?\\d)*.","\\033(\\[(\\[H\\033\\[2J|\\d+;\\d+H|\\d+(;\\d+;\\d+(;\\d+;\\d+)?m|[mABCDFGd])|[HJK]|1K)|[78]|\\d*[PMX]|\\(B\\033\\[m)"].join("|");return content.replace(new RegExp(pattern,"g"),"")}}),_expandall.set(this,{writable:!0,value:void 0}),_prepared.set(this,{writable:!0,value:!1}),_prepare.set(this,{writable:!0,value:()=>{if(_classPrivateFieldGet(this,_prepared))return;_classPrivateFieldSet(this,_prepared,!0);let columns=_classPrivateFieldGet(this,_rows).reduce((max,row)=>row.length>max?row.length:max,0);const emptyColumns=new Array(columns).fill(0).map((c,i)=>i);_classPrivateFieldSet(this,_originalColumns,emptyColumns);for(const row of _classPrivateFieldGet(this,_rows))if(row.forEach((content,col)=>{content=_classPrivateFieldGet(this,_cleanText).call(this,content),emptyColumns.indexOf(col)>=0&&null!=content&&"string"==typeof content&&content.trim().length>0&&emptyColumns.splice(emptyColumns.indexOf(col),1)}),0===emptyColumns.length)break;if(columns-=emptyColumns.length,0===columns)return;emptyColumns.length>0&&(_classPrivateFieldSet(this,_emptyCols,emptyColumns),_classPrivateFieldSet(this,_rows,_classPrivateFieldGet(this,_rows).map(row=>row.filter((r,col)=>emptyColumns.indexOf(col)<0)))),0===_classPrivateFieldGet(this,_align).length&&(_classPrivateFieldGet(this,_widths).length>0?_classPrivateFieldSet(this,_align,new Array(_classPrivateFieldGet(this,_widths).length).fill("l")):_classPrivateFieldSet(this,_align,new Array(_classPrivateFieldGet(this,_rows)[0].length-emptyColumns.length).fill("l")));for(let i=_classPrivateFieldGet(this,_align).length;i<columns;i++)_classPrivateFieldGet(this,_align).push("l");let defaultWidth=-1,extra=0;if(_classPrivateFieldGet(this,_expandall)||0===_classPrivateFieldGet(this,_widths).length)defaultWidth=Math.floor(_classPrivateFieldGet(this,_tableWidth)/columns),extra=_classPrivateFieldGet(this,_tableWidth)%columns;else{_classPrivateFieldSet(this,_widths,_classPrivateFieldGet(this,_widths).filter((w,i,a)=>emptyColumns.indexOf(i)<0)),_classPrivateFieldGet(this,_widths).forEach((w,i,a)=>{if("string"==typeof w&&"%"===w.substring(w.length-1)){const pct=parseFloat(w.replace(/[^0-9]+/g,""))/100;a[i]=Math.ceil(_classPrivateFieldGet(this,_tableWidth)*pct)}});const remainingSpace=_classPrivateFieldGet(this,_tableWidth)-_classPrivateFieldGet(this,_widths).reduce((acc,width)=>acc+width,0);defaultWidth=Math.floor(remainingSpace/(columns-_classPrivateFieldGet(this,_widths).length)),remainingSpace>0&&(extra=remainingSpace%(columns-_classPrivateFieldGet(this,_widths).length))}for(let i=_classPrivateFieldGet(this,_widths).length;i<columns;i++)_classPrivateFieldGet(this,_widths).push(defaultWidth);_classPrivateFieldGet(this,_widths)[_classPrivateFieldGet(this,_widths).length-1]+=extra;let start=0;_classPrivateFieldGet(this,_rows).forEach(row=>{row.forEach((columnContent,i)=>{const data=_classPrivateFieldGet(this,_cols).get(i)||{align:_classPrivateFieldGet(this,_align)[i]||"l",width:_classPrivateFieldGet(this,_widths)[i]||-1,start:start,contentLength:0,lines:[]};start+=data.width,data.lines.push(columnContent),columnContent.length>data.contentLength&&(data.contentLength=columnContent.length),_classPrivateFieldGet(this,_cols).set(i,data)})})}});const cfg="object"!=typeof rows||Array.isArray(rows)?{}:rows;cfg.hasOwnProperty("rows")&&(rows=cfg.rows),cfg.hasOwnProperty("align")&&(align=cfg.align),cfg.hasOwnProperty("maxWidths")&&(maxWidths=cfg.maxWidths),cfg.hasOwnProperty("tableWidth")&&(tableWidth=cfg.tableWidth),cfg.hasOwnProperty("margins")&&(margins=cfg.margins),_classPrivateFieldSet(this,_expandall,0===(maxWidths||[]).length),_classPrivateFieldSet(this,_rows,rows||[]),_classPrivateFieldSet(this,_align,align||[]),_classPrivateFieldSet(this,_widths,maxWidths||[]),_classPrivateFieldSet(this,_margin,(margins||[0,0,0,0]).map(m=>m<0?0:m));for(let i=margins.length;i<4;i++)_classPrivateFieldGet(this,_margin).push(0);_classPrivateFieldSet(this,_tableWidth,(tableWidth||80)-(_classPrivateFieldGet(this,_margin)[0]+_classPrivateFieldGet(this,_margin)[1]))}get columns(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_cols)}get columnCount(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_cols).size}get rows(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_rows)}get rowCount(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_rows).length}set cellspacing(value){_classPrivateFieldSet(this,_cellspacing,value<=0?0:value)}set fill(value){_classPrivateFieldSet(this,_fillChar,value.substring(0,1))}get output(){_classPrivateFieldGet(this,_prepared)||_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_cellspacing)>0&&_classPrivateFieldGet(this,_cols).forEach((col,i)=>{i<col.size-1&&(col.width=col.width-_classPrivateFieldGet(this,_cellspacing))});let height=0;_classPrivateFieldGet(this,_cols).forEach((col,i)=>{let lines=[];col.rows=[],col.lines.forEach(line=>{const w=col.width<0?col.contentLength:col.width,text=_classPrivateFieldGet(this,_truncate).indexOf(i)>=0?(content=line,(width=w)<=0?[""]:content.length<=width?[content]:[content.substring(0,width+1)]):this.wrap(line,w,col.align);var content,width;lines=[...lines,...text],col.rows.push(text.length)}),col.lines=lines,height=lines.length>height?lines.length:height}),_classPrivateFieldGet(this,_rows).length>1&&_classPrivateFieldGet(this,_cols).forEach((col,i)=>{_classPrivateFieldGet(this,_cols).forEach((otherCol,otherColumnNumber)=>{if(i!==otherColumnNumber){let accruedLines=0;col.rows.forEach(lines=>{if(lines>1)for(let line=1;line<lines;line++)otherCol.lines.splice(accruedLines+1,0,fill(otherCol.width));accruedLines+=lines})}})});let rows=[];const cellspacing=fill(_classPrivateFieldGet(this,_cellspacing)," ");let space=0;_classPrivateFieldGet(this,_cols).forEach((col,colNum)=>{col.lines.forEach((line,num)=>{rows[num]=(rows[num]||"")+line+(colNum!==_classPrivateFieldGet(this,_cols).size-1?cellspacing:"")});for(let i=col.lines.length;i<height;i++)rows[i]=fill(space+col.width," ");space+=col.width}),_classPrivateFieldGet(this,_margin).reduce((a,m)=>a+m,0)>0&&(rows=rows.map(row=>(_classPrivateFieldGet(this,_margin).forEach((margin,i)=>{switch(i){case 0:row=`${fill(margin)}${row}`;break;case 1:row=`${row}${fill(margin)}`}}),row)));for(let i=0;i<_classPrivateFieldGet(this,_margin)[2];i++)rows.unshift("");for(let i=0;i<_classPrivateFieldGet(this,_margin)[3];i++)rows.push("");return rows.join("\n")}wrap(content,width,align="right"){if(width<1)throw new Error("Width must be at least 1.");if(align="c"===(align=align.toLowerCase())?"center":"r"===align?"left":"right",content.length<=width)return[pad(content.trim(),width,align,_classPrivateFieldGet(this,_fillChar))];let re=_classPrivateFieldGet(this,_RE).get(width);re||(re=match(width),_classPrivateFieldGet(this,_RE).set(width,re));let result=content.match(re)||[];const remainder=content.substring(result.join("").length);return remainder.length>width?result=result.concat(cut(remainder,width,re)):remainder.length>0&&result.push(remainder),result.map(el=>pad(el.trim(),width,align,_classPrivateFieldGet(this,_fillChar)))}truncate(){0===arguments.length&&_classPrivateFieldSet(this,_truncate,new Array(_classPrivateFieldGet(this,_rows).length).fill(0).map((a,i)=>i));for(const arg of arguments)if(arg<=0)return void _classPrivateFieldSet(this,_truncate,[]);_classPrivateFieldSet(this,_truncate,Array.from(new Set([..._classPrivateFieldGet(this,_truncate),...arguments])))}}
//# sourceMappingURL=../table-debug/index.js.map
