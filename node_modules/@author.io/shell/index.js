// @author.io/shell v1.9.2
// Copyright (c) 2022 Corey Butler
// Released under the MIT License.
function _classPrivateFieldGet$2(receiver,privateMap){return function _classApplyDescriptorGet(receiver,descriptor){return descriptor.get?descriptor.get.call(receiver):descriptor.value}(receiver,_classExtractFieldDescriptor$2(receiver,privateMap,"get"))}function _classPrivateFieldSet$2(receiver,privateMap,value){return function _classApplyDescriptorSet(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor$2(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor$2(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}function _classPrivateFieldGet$1(receiver,privateMap){return function _classApplyDescriptorGet(receiver,descriptor){return descriptor.get?descriptor.get.call(receiver):descriptor.value}(receiver,_classExtractFieldDescriptor$1(receiver,privateMap,"get"))}function _classPrivateFieldSet$1(receiver,privateMap,value){return function _classApplyDescriptorSet(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor$1(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor$1(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}var _name$1=new WeakMap,_rawName=new WeakMap,_description$1=new WeakMap,_default=new WeakMap,_alias=new WeakMap,_required=new WeakMap,_type=new WeakMap,_allowMultipleValues=new WeakMap,_strictTypes=new WeakMap,_enum=new WeakMap,_value=new WeakMap,_violations$1=new WeakMap,_recognized=new WeakMap,_validator=new WeakMap;class Flag{constructor(cfg={}){if(_name$1.set(this,{writable:!0,value:void 0}),_rawName.set(this,{writable:!0,value:void 0}),_description$1.set(this,{writable:!0,value:void 0}),_default.set(this,{writable:!0,value:null}),_alias.set(this,{writable:!0,value:new Set}),_required.set(this,{writable:!0,value:!1}),_type.set(this,{writable:!0,value:String}),_allowMultipleValues.set(this,{writable:!0,value:!1}),_strictTypes.set(this,{writable:!0,value:!0}),_enum.set(this,{writable:!0,value:new Set}),_value.set(this,{writable:!0,value:null}),_violations$1.set(this,{writable:!0,value:new Set}),_recognized.set(this,{writable:!0,value:!1}),_validator.set(this,{writable:!0,value:null}),"string"==typeof cfg&&(cfg={name:cfg}),!cfg.name)throw new Error("Flag name is required.");if(_classPrivateFieldSet$1(this,_rawName,cfg.name),_classPrivateFieldSet$1(this,_name$1,cfg.name),cfg.hasOwnProperty("description")&&_classPrivateFieldSet$1(this,_description$1,cfg.description),cfg.hasOwnProperty("default")&&_classPrivateFieldSet$1(this,_default,cfg.default),cfg.hasOwnProperty("alias")&&this.createAlias(cfg.alias),cfg.hasOwnProperty("aliases")&&this.createAlias(cfg.aliases),cfg.hasOwnProperty("required")&&_classPrivateFieldSet$1(this,_required,cfg.required),cfg.hasOwnProperty("type")?this.type=cfg.type:cfg.hasOwnProperty("default")&&_classPrivateFieldGet$1(this,_default)&&(this.type=typeof _classPrivateFieldGet$1(this,_default)),cfg.hasOwnProperty("allowMultipleValues")&&_classPrivateFieldSet$1(this,_allowMultipleValues,cfg.allowMultipleValues),cfg.hasOwnProperty("strictTypes")&&_classPrivateFieldSet$1(this,_strictTypes,cfg.strictTypes),cfg.hasOwnProperty("options")&&(this.options=cfg.options),cfg.hasOwnProperty("validate")){if(!(cfg.validate instanceof RegExp||"function"==typeof cfg.validate))throw new Error(`The "validate" configuration attribute for ${_classPrivateFieldGet$1(this,_rawName)} is invalid. Only RegExp and functions are supported (received ${typeof cfg.validate})`);_classPrivateFieldSet$1(this,_validator,cfg.validate)}}get inputName(){return _classPrivateFieldGet$1(this,_rawName)}get recognized(){return _classPrivateFieldGet$1(this,_recognized)}set recognized(value){_classPrivateFieldSet$1(this,_recognized,value)}get required(){return _classPrivateFieldGet$1(this,_required)}set required(value){_classPrivateFieldSet$1(this,_required,value)}get valid(){const value=this.value;if(_classPrivateFieldSet$1(this,_violations$1,new Set),_classPrivateFieldGet$1(this,_required)&&(_classPrivateFieldGet$1(this,_allowMultipleValues)?0===this.value.length:null===this.value))return _classPrivateFieldSet$1(this,_violations$1,new Set([`"${_classPrivateFieldGet$1(this,_name$1)}" is required.`])),!1;if(_classPrivateFieldGet$1(this,_enum).size>0)if(_classPrivateFieldGet$1(this,_allowMultipleValues)){const invalid=value.filter(item=>!_classPrivateFieldGet$1(this,_enum).has(item));if(invalid.length>0)return invalid.forEach(v=>_classPrivateFieldGet$1(this,_violations$1).add(`"${v}" is invalid. Expected one of: ${Array.from(_classPrivateFieldGet$1(this,_enum)).join(", ")}`)),!1}else if(!_classPrivateFieldGet$1(this,_enum).has(value))return _classPrivateFieldGet$1(this,_violations$1).add(`"${value}" is invalid. Expected one of: ${Array.from(_classPrivateFieldGet$1(this,_enum)).join(", ")}`),!1;if(_classPrivateFieldGet$1(this,_strictTypes)){const type=this.type;if("any"!==type&&"*"!==type&&this.recognized)if(_classPrivateFieldGet$1(this,_allowMultipleValues)){const invalidTypes=value.filter(item=>typeof item!==type);if(invalidTypes.length>0)return invalidTypes.forEach(v=>_classPrivateFieldGet$1(this,_violations$1).add(`"${this.name}" (${v}) should be a ${type}, not ${typeof v}.`)),!1}else if(null!==value&&typeof value!==type)return _classPrivateFieldGet$1(this,_violations$1).add(`"${this.name}" should be a ${type}, not ${typeof value}.`),!1}if(null!==_classPrivateFieldGet$1(this,_validator))if("function"==typeof _classPrivateFieldGet$1(this,_validator)){if(!_classPrivateFieldGet$1(this,_validator).call(this,value))return _classPrivateFieldGet$1(this,_violations$1).add(`"${value}" is invalid (failed custom validation).`),!1}else{if("string"!=typeof value&&_classPrivateFieldGet$1(this,_validator)instanceof RegExp)return _classPrivateFieldGet$1(this,_violations$1).add(`"${value}" is invalid (failed custom validation).`),!1;if(!_classPrivateFieldGet$1(this,_validator).test(value))return _classPrivateFieldGet$1(this,_violations$1).add(`"${value}" is invalid (failed custom validation).`),!1}return!0}get violations(){return this.valid?[]:Array.from(_classPrivateFieldGet$1(this,_violations$1))}get type(){return _classPrivateFieldGet$1(this,_type).name.split(/\s+/)[0].toLowerCase()}set type(value){if("string"==typeof value)switch(value.trim().toLowerCase()){case"number":case"integer":case"float":case"double":_classPrivateFieldSet$1(this,_type,Number);break;case"bigint":_classPrivateFieldSet$1(this,_type,BigInt);break;case"boolean":_classPrivateFieldSet$1(this,_type,Boolean);break;default:_classPrivateFieldSet$1(this,_type,String)}else _classPrivateFieldSet$1(this,_type,value)}get strictTypes(){return _classPrivateFieldGet$1(this,_strictTypes)}set strictTypes(value){if("boolean"!=typeof value)throw new Error("strictTypes must be a boolean value.");_classPrivateFieldSet$1(this,_strictTypes,value)}get name(){return _classPrivateFieldGet$1(this,_name$1)}set name(value){_classPrivateFieldSet$1(this,_name$1,value.trim())}get description(){return _classPrivateFieldGet$1(this,_name$1)}set description(value){_classPrivateFieldSet$1(this,_description$1,value.trim())}get value(){if(_classPrivateFieldGet$1(this,_allowMultipleValues)&&null===_classPrivateFieldGet$1(this,_value)){if(null===_classPrivateFieldGet$1(this,_default))return[];if(!Array.isArray(_classPrivateFieldGet$1(this,_default)))return[_classPrivateFieldGet$1(this,_default)]}return _classPrivateFieldGet$1(this,_value)||_classPrivateFieldGet$1(this,_default)}set value(value){if(_classPrivateFieldGet$1(this,_allowMultipleValues)){if(Array.isArray(value))return void _classPrivateFieldSet$1(this,_value,value);_classPrivateFieldSet$1(this,_value,_classPrivateFieldGet$1(this,_value)||[]),_classPrivateFieldGet$1(this,_value).push(value)}else _classPrivateFieldSet$1(this,_value,value)}get options(){return Array.from(_classPrivateFieldGet$1(this,_enum))}set options(value){"string"==typeof value&&(value=value.split(",").map(option=>option.trim())),_classPrivateFieldSet$1(this,_enum,new Set(value))}get aliases(){return Array.from(_classPrivateFieldGet$1(this,_alias))}get multipleValuesAllowed(){return _classPrivateFieldGet$1(this,_allowMultipleValues)}hasAlias(alias){return _classPrivateFieldGet$1(this,_alias).has(alias)}createAlias(){for(let alias of arguments)if(alias instanceof Set&&(alias=Array.from(alias)),Array.isArray(alias))this.createAlias(...alias);else{if("string"!=typeof alias)throw new Error(`Cannot create an alias for a ${typeof alias} element. Please specify a string instead.`);_classPrivateFieldGet$1(this,_alias).add(alias.replace(/^-+/gi,""))}}allowMultipleValues(){_classPrivateFieldGet$1(this,_allowMultipleValues)||(null!==_classPrivateFieldGet$1(this,_value)&&_classPrivateFieldSet$1(this,_value,[_classPrivateFieldGet$1(this,_value)]),null!==_classPrivateFieldGet$1(this,_default)&&_classPrivateFieldSet$1(this,_default,[_classPrivateFieldGet$1(this,_default)]),_classPrivateFieldSet$1(this,_allowMultipleValues,!0))}preventMultipleValues(){_classPrivateFieldGet$1(this,_allowMultipleValues)&&(null!==_classPrivateFieldGet$1(this,_value)&&_classPrivateFieldSet$1(this,_value,_classPrivateFieldGet$1(this,_value).pop()),null!==_classPrivateFieldGet$1(this,_default)&&_classPrivateFieldSet$1(this,_default,_classPrivateFieldGet$1(this,_default).pop()),_classPrivateFieldSet$1(this,_allowMultipleValues,!1))}}const PARSER=/((-+(?<flag>[^\s\"\']+))(\s+((?<value>[\"\'](?<unquoted_value>((\\\"|\\\')|[^\"\'])+)[\"\']|[^-][^\s]+)))?|(([\"\'](?<quoted_arg>((\\\"|\\\')|[^\"\'])+)[\"\']))|(?<arg>[^\s]+))/gi,BOOLS=new Set(["true","false"]);var _args=new WeakMap,_flags=new WeakMap,_unknownFlags=new WeakMap,_allowUnrecognized=new WeakMap,_violations=new WeakMap,_ignoreTypes=new WeakMap,_aliases$1=new WeakMap,_validFlags=new WeakMap,_length=new WeakMap,_quotedFlags=new WeakMap,_cleanFlag=new WeakMap,_flagRef=new WeakMap;class Parser{constructor(argList=null,cfg=null){_args.set(this,{writable:!0,value:[]}),_flags.set(this,{writable:!0,value:new Map}),_unknownFlags.set(this,{writable:!0,value:new Map}),_allowUnrecognized.set(this,{writable:!0,value:!0}),_violations.set(this,{writable:!0,value:new Set}),_ignoreTypes.set(this,{writable:!0,value:!1}),_aliases$1.set(this,{writable:!0,value:new Set}),_validFlags.set(this,{writable:!0,value:null}),_length.set(this,{writable:!0,value:0}),_quotedFlags.set(this,{writable:!0,value:new Set}),_cleanFlag.set(this,{writable:!0,value:flag=>flag.replace(/^-+/g,"").trim().toLowerCase()}),_flagRef.set(this,{writable:!0,value:flag=>this.getFlag(flag)||this.addFlag(flag)}),null===argList||"object"!=typeof argList||Array.isArray(argList)||(cfg=argList,argList=null),null!==cfg&&this.configure(cfg),globalThis.hasOwnProperty("argv")?this.parse(process.argv.slice(2)):null!==argList&&this.parse(argList)}get length(){return _classPrivateFieldGet$1(this,_length)}get valid(){return _classPrivateFieldSet$1(this,_validFlags,!0),_classPrivateFieldSet$1(this,_violations,new Set),_classPrivateFieldGet$1(this,_flags).forEach((flag,flagname)=>{_classPrivateFieldGet$1(this,_aliases$1).has(flagname)||(flag.strictTypes=!_classPrivateFieldGet$1(this,_ignoreTypes),flag.valid||(_classPrivateFieldSet$1(this,_validFlags,!1),_classPrivateFieldSet$1(this,_violations,new Set([..._classPrivateFieldGet$1(this,_violations),...flag.violations]))),_classPrivateFieldGet$1(this,_allowUnrecognized)||flag.recognized||(_classPrivateFieldSet$1(this,_validFlags,!1),_classPrivateFieldGet$1(this,_violations).add(`"${flagname}" is unrecognized.`)))}),!_classPrivateFieldGet$1(this,_allowUnrecognized)&&_classPrivateFieldGet$1(this,_unknownFlags).size>0&&(_classPrivateFieldSet$1(this,_validFlags,!1),_classPrivateFieldGet$1(this,_unknownFlags).forEach(flag=>_classPrivateFieldGet$1(this,_violations).add(`"${flag.name}" is unrecognized.`))),_classPrivateFieldGet$1(this,_validFlags)}get violations(){return _classPrivateFieldSet$1(this,_validFlags,_classPrivateFieldGet$1(this,_validFlags)||this.valid),Array.from(_classPrivateFieldGet$1(this,_violations))}get unrecognizedFlags(){const result=new Set;return _classPrivateFieldGet$1(this,_flags).forEach((flag,flagname)=>{_classPrivateFieldGet$1(this,_aliases$1).has(flagname)||flag.recognized||result.add(flag.name)}),_classPrivateFieldGet$1(this,_unknownFlags).forEach(flag=>result.add(flag.name)),Array.from(result)}get recognizedFlags(){const result=new Set;return _classPrivateFieldGet$1(this,_flags).forEach((flag,flagname)=>{_classPrivateFieldGet$1(this,_aliases$1).has(flagname)||flag.recognized&&result.add(flagname)}),Array.from(result)}get flags(){return Array.from(_classPrivateFieldGet$1(this,_flags).keys()).concat(Array.from(_classPrivateFieldGet$1(this,_unknownFlags).keys()))}get data(){const data={},sources={};return _classPrivateFieldGet$1(this,_flags).forEach((flag,name)=>{_classPrivateFieldGet$1(this,_aliases$1).has(name)||("boolean"===flag.type&&null===flag.value?data[flag.name]=!1:data[flag.name]=flag.value,Object.defineProperty(sources,flag.name,{enumerable:!0,get:()=>flag}))}),_classPrivateFieldGet$1(this,_unknownFlags).forEach((flag,name)=>{let unknownName=flag.name,count=0;for(;data.hasOwnProperty(unknownName);)count++,unknownName=`${unknownName}${count}`;data[unknownName]=null===flag.value||flag.value,Object.defineProperty(sources,unknownName,{enumerable:!0,get:()=>flag})}),Object.defineProperty(data,"flagSource",{enumerable:!1,writable:!1,configurable:!1,value:sources}),data}configure(config={}){for(const[name,cfg]of Object.entries(config))cfg.name=name,this.addFlag(cfg).recognized=!0}parse(input){if(!input)return;input=Array.isArray(input)?input.join(" "):input;const args=[],flags=[];Array.from([...input.matchAll(PARSER)]).forEach(parsedArg=>{let{flag:flag,value:value,unquoted_value:unquoted_value,quoted_arg:quoted_arg,arg:arg}=parsedArg.groups;arg?args.push(arg):quoted_arg?(args.push(quoted_arg),_classPrivateFieldGet$1(this,_quotedFlags).add(_classPrivateFieldGet$1(this,_cleanFlag).call(this,quoted_arg))):(value=unquoted_value||value,value=void 0===value||value,"string"==typeof value&&BOOLS.has(value.toLowerCase())&&(value="true"===value.toLowerCase()),flags.push({flag:flag,value:value}))}),_classPrivateFieldSet$1(this,_length,flags.length+args.length);for(const arg of flags){let ref=_classPrivateFieldGet$1(this,_flagRef).call(this,arg.flag);ref.aliasOf&&(ref=ref.aliasOf),ref.value=arg.value}for(const arg of args)if(this.exists(arg)){const uflag=new Flag(_classPrivateFieldGet$1(this,_cleanFlag).call(this,arg));uflag.strictTypes=!_classPrivateFieldGet$1(this,_ignoreTypes),_classPrivateFieldGet$1(this,_unknownFlags).set(_classPrivateFieldGet$1(this,_cleanFlag).call(this,arg),uflag)}else this.addFlag(arg).value=!0;_classPrivateFieldGet$1(this,_flags).forEach((flag,name)=>{if(_classPrivateFieldGet$1(this,_aliases$1).has(name)&&(void 0===flag.value||flag.aliasOf.multipleValuesAllowed||(flag.aliasOf.value=flag.value)),typeof flag.value!==flag.type&&"boolean"===flag.type)if(null===flag.value)flag.value=!1;else{const unknownFlag=new Flag(_classPrivateFieldGet$1(this,_cleanFlag).call(this,"unknown"+(_classPrivateFieldGet$1(this,_unknownFlags).size+1)));unknownFlag.strictTypes=!_classPrivateFieldGet$1(this,_ignoreTypes),unknownFlag.value=flag.value,_classPrivateFieldGet$1(this,_unknownFlags).has(unknownFlag.name)||_classPrivateFieldGet$1(this,_unknownFlags).set(unknownFlag.name,unknownFlag),flag.value=!0}})}getFlag(flag){return _classPrivateFieldGet$1(this,_flags).get(_classPrivateFieldGet$1(this,_cleanFlag).call(this,flag))||_classPrivateFieldGet$1(this,_unknownFlags).get(_classPrivateFieldGet$1(this,_cleanFlag).call(this,flag))}addFlag(cfg){cfg="object"==typeof cfg?cfg:{name:cfg};const preclean=_classPrivateFieldGet$1(this,_cleanFlag).call(this,cfg.name),clean=_classPrivateFieldGet$1(this,_quotedFlags).has(preclean)?cfg.name:preclean;if(_classPrivateFieldGet$1(this,_flags).has(clean))throw new Error(`"${cfg.name}" flag already exists.`);const flag=new Flag(cfg);return flag.strictTypes=!_classPrivateFieldGet$1(this,_ignoreTypes),_classPrivateFieldGet$1(this,_flags).set(clean,flag),flag.aliases.length>0&&flag.aliases.forEach(alias=>{_classPrivateFieldGet$1(this,_flags).set(_classPrivateFieldGet$1(this,_cleanFlag).call(this,alias),{aliasOf:_classPrivateFieldGet$1(this,_flags).get(clean)}),_classPrivateFieldGet$1(this,_aliases$1).add(_classPrivateFieldGet$1(this,_cleanFlag).call(this,alias))}),_classPrivateFieldGet$1(this,_flags).get(clean)}exists(flag){return _classPrivateFieldGet$1(this,_flags).has(_classPrivateFieldGet$1(this,_cleanFlag).call(this,flag))||_classPrivateFieldGet$1(this,_unknownFlags).has(_classPrivateFieldGet$1(this,_cleanFlag).call(this,flag))}typeof(flag){return this.exists(flag)?this.getFlag(flag).type:_classPrivateFieldGet$1(this,_unknownFlags).has(_classPrivateFieldGet$1(this,_cleanFlag).call(this,flag))?"boolean":"undefined"}value(flag=null){return this.exists(flag)?this.getFlag(flag).value:!!_classPrivateFieldGet$1(this,_unknownFlags).has(_classPrivateFieldGet$1(this,_cleanFlag).call(this,flag))||void 0}getFlagAliases(flag){return this.exists(flag)?new Set(this.getFlag(flag).aliases):new Set}require(){Array.from(arguments).forEach(arg=>{if(!_classPrivateFieldGet$1(this,_aliases$1).has(arg)){const flag=_classPrivateFieldGet$1(this,_flagRef).call(this,arg);flag.required=!0,flag.recognized=!0}})}recognize(){Array.from(arguments).forEach(arg=>{this.getFlag(arg)||(this.addFlag(arg).recognized=!0)})}disallowUnrecognized(){_classPrivateFieldSet$1(this,_allowUnrecognized,!1)}allowUnrecognized(){_classPrivateFieldSet$1(this,_allowUnrecognized,!0)}ignoreDataTypes(){_classPrivateFieldSet$1(this,_ignoreTypes,!1),_classPrivateFieldGet$1(this,_flags).forEach((flag,name)=>{flag.strictTypes=!1,_classPrivateFieldGet$1(this,_flags).set(name,flag)})}enforceDataTypes(){_classPrivateFieldSet$1(this,_ignoreTypes,!0),_classPrivateFieldGet$1(this,_flags).forEach((flag,name)=>{flag.strictTypes=!0,_classPrivateFieldGet$1(this,_flags).set(name,flag)})}defaults(obj={}){for(const[name,value]of Object.entries(obj)){const flag=_classPrivateFieldGet$1(this,_flagRef).call(this,name);flag.default=value,flag.recognized=!0}}alias(obj={}){for(const[flagname,alias]of Object.entries(obj)){const flag=_classPrivateFieldGet$1(this,_flagRef).call(this,flagname);if(_classPrivateFieldGet$1(this,_aliases$1).has(alias)&&flagname.toLowerCase()!==flag.name.toLowerCase())throw new Error(`The "${alias}" alias is already associated to the "${this.getFlag(alias).name}" flag.`);flag.hasAlias(alias)||flag.createAlias.apply(flag,alias),flag.recognized=!0}}allowMultipleValues(){for(const flag of arguments)_classPrivateFieldGet$1(this,_flagRef).call(this,flag).allowMultipleValues()}preventMultipleValues(){for(const flag of arguments)_classPrivateFieldGet$1(this,_flagRef).call(this,flag).preventMultipleValues()}setOptions(){if(arguments.length<2)throw new Error("setOptions method requires the flag name and at least one value (i.e. minimum 2 arguments).");const enums=Array.from(arguments),flag=_classPrivateFieldGet$1(this,_flagRef).call(this,enums.shift());flag.recognized=!0,flag.options=enums}describe(flag,desc){_classPrivateFieldGet$1(this,_flagRef).call(this,flag).description=desc}description(flagname){const flag=this.getFlag(flagname);return flag?flag.description:"undefined"}enforceRules(){if(_classPrivateFieldSet$1(this,_validFlags,this.valid),!_classPrivateFieldGet$1(this,_validFlags)){if(globalThis.hasOwnProperty("process"))return console.error("InvalidFlags: Process exited with error.\n * "+this.violations.join("\n * ")),globalThis.process.exit(1);throw new Error("InvalidFlags: Process exited with error.")}return _classPrivateFieldGet$1(this,_validFlags)}}new Parser;class Middleware{constructor(){Object.defineProperties(this,{_data:{enumerable:!1,configurable:!1,value:[]},go:{enumerable:!1,configurable:!1,writable:!0,value:(...args)=>{args.pop().apply(this,args)}}})}get size(){return this._data.length}get data(){return this._data}use(method){const methodBody=method.toString();methodBody.indexOf("[native code]")<0&&this._data.push(methodBody),this.go=(stack=>(...args)=>{const next=args.pop();stack(...args,()=>{method.apply(this,[...args,next.bind(null,...args)])})})(this.go)}run(){const args=Array.from(arguments);0!==args.length&&"function"==typeof args[args.length-1]||args.push(()=>{}),this.go(...args)}}function _classPrivateFieldGet(receiver,privateMap){return function _classApplyDescriptorGet(receiver,descriptor){return descriptor.get?descriptor.get.call(receiver):descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function _classApplyDescriptorSet(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const cut=(content,width,re)=>{if(width<1)throw new Error("Width must be at least 1.");let result=[content.substring(0,width)];if((content=content.substring(width)).length>width){const matches=content.match(re)||[];let remainder=content.substring(matches.join("").length);if(matches.length>0&&(result=result.concat(matches)),remainder.length>0&&remainder.length>width)if(maxMatch.test(remainder))result=result.concat(cut(remainder,width));else{let i=0;for(;remainder.length>0&&i<20;)i++,remainder.length<=width?(result.push(remainder),remainder=""):(result.push(remainder.substring(0,width)),remainder=remainder.substring(width))}else remainder>0&&result.push(remainder)}return result},pad=(content,width,position="right",char=" ")=>{if(content.length>=width)return content;switch(position){case"center":return content.padStart(Math.floor(content.length/2),char).padEnd(width,char);case"left":return content.padStart(width,char);default:return content.padEnd(width,char)}},fill=(count=0,char=" ")=>char.repeat(count),match=width=>new RegExp(`(.{0,${width}})[\\s\\n\\t(\\.\\s)]`,"g"),maxMatch=match(2e3);var _rows=new WeakMap,_cols=new WeakMap,_align=new WeakMap,_widths=new WeakMap,_tableWidth$1=new WeakMap,_tabWidth$1=new WeakMap,_max=new WeakMap,_cellspacing=new WeakMap,_margin=new WeakMap,_truncate=new WeakMap,_emptyCols=new WeakMap,_originalColumns=new WeakMap,_RE=new WeakMap,_fillChar=new WeakMap,_cleanText=new WeakMap,_expandall=new WeakMap,_prepared=new WeakMap,_prepare=new WeakMap;class Table{constructor(rows=[],align=[],maxWidths=[],tableWidth=80,margins=[0,0,0,0]){_rows.set(this,{writable:!0,value:void 0}),_cols.set(this,{writable:!0,value:new Map}),_align.set(this,{writable:!0,value:[]}),_widths.set(this,{writable:!0,value:[]}),_tableWidth$1.set(this,{writable:!0,value:void 0}),_tabWidth$1.set(this,{writable:!0,value:2}),_max.set(this,{writable:!0,value:1/0}),_cellspacing.set(this,{writable:!0,value:0}),_margin.set(this,{writable:!0,value:void 0}),_truncate.set(this,{writable:!0,value:[]}),_emptyCols.set(this,{writable:!0,value:[]}),_originalColumns.set(this,{writable:!0,value:[]}),_RE.set(this,{writable:!0,value:new Map}),_fillChar.set(this,{writable:!0,value:" "}),_cleanText.set(this,{writable:!0,value:content=>{content=content.replace(/\t/g,fill(_classPrivateFieldGet(this,_tabWidth$1)));const pattern=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))","\\x1B[[(?);]{0,2}(;?\\d)*.","\\033(\\[(\\[H\\033\\[2J|\\d+;\\d+H|\\d+(;\\d+;\\d+(;\\d+;\\d+)?m|[mABCDFGd])|[HJK]|1K)|[78]|\\d*[PMX]|\\(B\\033\\[m)"].join("|");return content.replace(new RegExp(pattern,"g"),"")}}),_expandall.set(this,{writable:!0,value:void 0}),_prepared.set(this,{writable:!0,value:!1}),_prepare.set(this,{writable:!0,value:()=>{if(_classPrivateFieldGet(this,_prepared))return;_classPrivateFieldSet(this,_prepared,!0);let columns=_classPrivateFieldGet(this,_rows).reduce((max,row)=>row.length>max?row.length:max,0);const emptyColumns=new Array(columns).fill(0).map((c,i)=>i);_classPrivateFieldSet(this,_originalColumns,emptyColumns);for(const row of _classPrivateFieldGet(this,_rows))if(row.forEach((content,col)=>{content=_classPrivateFieldGet(this,_cleanText).call(this,content),emptyColumns.indexOf(col)>=0&&null!=content&&"string"==typeof content&&content.trim().length>0&&emptyColumns.splice(emptyColumns.indexOf(col),1)}),0===emptyColumns.length)break;if(columns-=emptyColumns.length,0===columns)return;emptyColumns.length>0&&(_classPrivateFieldSet(this,_emptyCols,emptyColumns),_classPrivateFieldSet(this,_rows,_classPrivateFieldGet(this,_rows).map(row=>row.filter((r,col)=>emptyColumns.indexOf(col)<0)))),0===_classPrivateFieldGet(this,_align).length&&(_classPrivateFieldGet(this,_widths).length>0?_classPrivateFieldSet(this,_align,new Array(_classPrivateFieldGet(this,_widths).length).fill("l")):_classPrivateFieldSet(this,_align,new Array(_classPrivateFieldGet(this,_rows)[0].length-emptyColumns.length).fill("l")));for(let i=_classPrivateFieldGet(this,_align).length;i<columns;i++)_classPrivateFieldGet(this,_align).push("l");let defaultWidth=-1,extra=0;if(_classPrivateFieldGet(this,_expandall)||0===_classPrivateFieldGet(this,_widths).length)defaultWidth=Math.floor(_classPrivateFieldGet(this,_tableWidth$1)/columns),extra=_classPrivateFieldGet(this,_tableWidth$1)%columns;else{_classPrivateFieldSet(this,_widths,_classPrivateFieldGet(this,_widths).filter((w,i,a)=>emptyColumns.indexOf(i)<0)),_classPrivateFieldGet(this,_widths).forEach((w,i,a)=>{if("string"==typeof w&&"%"===w.substring(w.length-1)){const pct=parseFloat(w.replace(/[^0-9]+/g,""))/100;a[i]=Math.ceil(_classPrivateFieldGet(this,_tableWidth$1)*pct)}});const remainingSpace=_classPrivateFieldGet(this,_tableWidth$1)-_classPrivateFieldGet(this,_widths).reduce((acc,width)=>acc+width,0);defaultWidth=Math.floor(remainingSpace/(columns-_classPrivateFieldGet(this,_widths).length)),remainingSpace>0&&(extra=remainingSpace%(columns-_classPrivateFieldGet(this,_widths).length))}for(let i=_classPrivateFieldGet(this,_widths).length;i<columns;i++)_classPrivateFieldGet(this,_widths).push(defaultWidth);_classPrivateFieldGet(this,_widths)[_classPrivateFieldGet(this,_widths).length-1]+=extra;let start=0;_classPrivateFieldGet(this,_rows).forEach(row=>{row.forEach((columnContent,i)=>{const data=_classPrivateFieldGet(this,_cols).get(i)||{align:_classPrivateFieldGet(this,_align)[i]||"l",width:_classPrivateFieldGet(this,_widths)[i]||-1,start:start,contentLength:0,lines:[]};start+=data.width,data.lines.push(columnContent),columnContent.length>data.contentLength&&(data.contentLength=columnContent.length),_classPrivateFieldGet(this,_cols).set(i,data)})})}});const cfg="object"!=typeof rows||Array.isArray(rows)?{}:rows;cfg.hasOwnProperty("rows")&&(rows=cfg.rows),cfg.hasOwnProperty("align")&&(align=cfg.align),cfg.hasOwnProperty("maxWidths")&&(maxWidths=cfg.maxWidths),cfg.hasOwnProperty("tableWidth")&&(tableWidth=cfg.tableWidth),cfg.hasOwnProperty("margins")&&(margins=cfg.margins),_classPrivateFieldSet(this,_expandall,0===(maxWidths||[]).length),_classPrivateFieldSet(this,_rows,rows||[]),_classPrivateFieldSet(this,_align,align||[]),_classPrivateFieldSet(this,_widths,maxWidths||[]),_classPrivateFieldSet(this,_margin,(margins||[0,0,0,0]).map(m=>m<0?0:m));for(let i=margins.length;i<4;i++)_classPrivateFieldGet(this,_margin).push(0);_classPrivateFieldSet(this,_tableWidth$1,(tableWidth||80)-(_classPrivateFieldGet(this,_margin)[0]+_classPrivateFieldGet(this,_margin)[1]))}get columns(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_cols)}get columnCount(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_cols).size}get rows(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_rows)}get rowCount(){return!_classPrivateFieldGet(this,_prepared)&&_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_rows).length}set cellspacing(value){_classPrivateFieldSet(this,_cellspacing,value<=0?0:value)}set fill(value){_classPrivateFieldSet(this,_fillChar,value.substring(0,1))}get output(){_classPrivateFieldGet(this,_prepared)||_classPrivateFieldGet(this,_prepare).call(this),_classPrivateFieldGet(this,_cellspacing)>0&&_classPrivateFieldGet(this,_cols).forEach((col,i)=>{i<col.size-1&&(col.width=col.width-_classPrivateFieldGet(this,_cellspacing))});let height=0;_classPrivateFieldGet(this,_cols).forEach((col,i)=>{let lines=[];col.rows=[],col.lines.forEach(line=>{const w=col.width<0?col.contentLength:col.width,text=_classPrivateFieldGet(this,_truncate).indexOf(i)>=0?(content=line,(width=w)<=0?[""]:content.length<=width?[content]:[content.substring(0,width+1)]):this.wrap(line,w,col.align);var content,width;lines=[...lines,...text],col.rows.push(text.length)}),col.lines=lines,height=lines.length>height?lines.length:height}),_classPrivateFieldGet(this,_rows).length>1&&_classPrivateFieldGet(this,_cols).forEach((col,i)=>{_classPrivateFieldGet(this,_cols).forEach((otherCol,otherColumnNumber)=>{if(i!==otherColumnNumber){let accruedLines=0;col.rows.forEach(lines=>{if(lines>1)for(let line=1;line<lines;line++)otherCol.lines.splice(accruedLines+1,0,fill(otherCol.width));accruedLines+=lines})}})});let rows=[];const cellspacing=fill(_classPrivateFieldGet(this,_cellspacing)," ");let space=0;_classPrivateFieldGet(this,_cols).forEach((col,colNum)=>{col.lines.forEach((line,num)=>{rows[num]=(rows[num]||"")+line+(colNum!==_classPrivateFieldGet(this,_cols).size-1?cellspacing:"")});for(let i=col.lines.length;i<height;i++)rows[i]=fill(space+col.width," ");space+=col.width}),_classPrivateFieldGet(this,_margin).reduce((a,m)=>a+m,0)>0&&(rows=rows.map(row=>(_classPrivateFieldGet(this,_margin).forEach((margin,i)=>{switch(i){case 0:row=`${fill(margin)}${row}`;break;case 1:row=`${row}${fill(margin)}`}}),row)));for(let i=0;i<_classPrivateFieldGet(this,_margin)[2];i++)rows.unshift("");for(let i=0;i<_classPrivateFieldGet(this,_margin)[3];i++)rows.push("");return rows.join("\n")}wrap(content,width,align="right"){if(width<1)throw new Error("Width must be at least 1.");if(align="c"===(align=align.toLowerCase())?"center":"r"===align?"left":"right",content.length<=width)return[pad(content.trim(),width,align,_classPrivateFieldGet(this,_fillChar))];let re=_classPrivateFieldGet(this,_RE).get(width);re||(re=match(width),_classPrivateFieldGet(this,_RE).set(width,re));let result=content.match(re)||[];const remainder=content.substring(result.join("").length);return remainder.length>width?result=result.concat(cut(remainder,width,re)):remainder.length>0&&result.push(remainder),result.map(el=>pad(el.trim(),width,align,_classPrivateFieldGet(this,_fillChar)))}truncate(){0===arguments.length&&_classPrivateFieldSet(this,_truncate,new Array(_classPrivateFieldGet(this,_rows).length).fill(0).map((a,i)=>i));for(const arg of arguments)if(arg<=0)return void _classPrivateFieldSet(this,_truncate,[]);_classPrivateFieldSet(this,_truncate,Array.from(new Set([..._classPrivateFieldGet(this,_truncate),...arguments])))}}var _data=new WeakMap,_tableWidth=new WeakMap,_colAlign=new WeakMap,_colWidth=new WeakMap;class Formatter{constructor(data){_data.set(this,{writable:!0,value:null}),_tableWidth.set(this,{writable:!0,value:80}),_colAlign.set(this,{writable:!0,value:[]}),_colWidth.set(this,{writable:!0,value:["20%","15%","65%"]}),_classPrivateFieldSet$2(this,_data,data)}set width(value){_classPrivateFieldSet$2(this,_tableWidth,value<20?20:value)}set columnWidths(value){_classPrivateFieldSet$2(this,_colWidth,value)}set columnAlignment(value){_classPrivateFieldSet$2(this,_colAlign,value)}get usage(){const desc=_classPrivateFieldGet$2(this,_data).description.trim();if(_classPrivateFieldGet$2(this,_data)instanceof Command){const aliases=_classPrivateFieldGet$2(this,_data).aliases,out=[`${_classPrivateFieldGet$2(this,_data).commandroot}${aliases.length>0?"|"+aliases.join("|"):""}${_classPrivateFieldGet$2(this,_data).__flagConfig.size>0?" [FLAGS]":""}${_classPrivateFieldGet$2(this,_data).arguments.size>0?" "+Array.from(_classPrivateFieldGet$2(this,_data).arguments).map(i=>"<"+i+">").join(" "):""}`];return _classPrivateFieldGet$2(this,_data).__processors.size>0&&(out[out.length-1]+=(_classPrivateFieldGet$2(this,_data).arguments.size>0||_classPrivateFieldGet$2(this,_data).__flagConfig.size>0?" |":"")+" [COMMAND]"),desc.trim().length>0&&out!==desc&&out.push(new Table([[desc.trim().replace(/\n/gi,"\n  ")]],null,null,_classPrivateFieldGet$2(this,_tableWidth),[2,0,1,1]).output),out.join("\n")}return _classPrivateFieldGet$2(this,_data)instanceof Shell?`${_classPrivateFieldGet$2(this,_data).name}${_classPrivateFieldGet$2(this,_data).__processors.size>0?" [COMMAND]":""}\n${desc.trim().length>0?new Table([[desc.trim().replace(/\n/gi,"\n  ")]],null,null,_classPrivateFieldGet$2(this,_tableWidth),[2,0,1,1]).output:""}${_classPrivateFieldGet$2(this,_data).arguments.size>0?" "+Array.from(_classPrivateFieldGet$2(this,_data).arguments).map(i=>"["+i+"]").join(" "):""}\n`.trim():""}get subcommands(){const rows=Array.from(_classPrivateFieldGet$2(this,_data).__processors.values()).map(cmd=>[[cmd.name].concat(cmd.aliases).join("|"),cmd.description]),result=[];if(rows.length>0){const table=new Table(rows,_classPrivateFieldGet$2(this,_colAlign),["25%","75%"],_classPrivateFieldGet$2(this,_tableWidth),[2]);result.push("\nCommands:\n"),result.push(table.output)}return result.join("\n")}get help(){const usage=this.usage.trim();if(_classPrivateFieldGet$2(this,_data)instanceof Command){const flags=_classPrivateFieldGet$2(this,_data).__flagConfig,rows=[];flags.size>0&&flags.forEach((cfg,flag)=>{let aliases=Array.from(cfg.aliases||cfg.alias||[]);aliases=0===aliases.length?"":"["+aliases.map(a=>"-"+a).join(", ")+"]";let dsc=[cfg.description||""];cfg.hasOwnProperty("options")&&_classPrivateFieldGet$2(this,_data).describeOptions&&dsc.push(`Options: ${cfg.options.join(", ")}.`),cfg.hasOwnProperty("allowMultipleValues")&&!0===cfg.allowMultipleValues&&_classPrivateFieldGet$2(this,_data).describeMultipleValues&&dsc.push("Can be used multiple times."),cfg.hasOwnProperty("default")&&_classPrivateFieldGet$2(this,_data).describeDefault&&dsc.push(`(Default: ${cfg.default.toString()})`),cfg.hasOwnProperty("required")&&!0===cfg.required&&_classPrivateFieldGet$2(this,_data).describeRequired&&dsc.unshift("Required."),dsc=dsc.join(" ").trim(),rows.push(["--"+flag,aliases||"",dsc||""])});const table=new Table(rows,_classPrivateFieldGet$2(this,_colAlign),_classPrivateFieldGet$2(this,_colWidth),_classPrivateFieldGet$2(this,_tableWidth),[2,0,usage.length>0?1:0,0]);let subcommands="\n"+this.subcommands;return 0===subcommands.trim().length&&(subcommands=""),usage+(flags.size>0?"\n\nFlags:\n"+table.output:"")+subcommands}return _classPrivateFieldGet$2(this,_data)instanceof Shell?[usage,this.subcommands].join("\n"):""}}var _plugins=new WeakMap,_url=new WeakMap,_support=new WeakMap,_formattedDefaultHelp=new WeakMap,_description=new WeakMap,_customUsage=new WeakMap,_customHelp=new WeakMap,_arguments=new WeakMap,_autohelp=new WeakMap,_processors=new WeakMap,_commands=new WeakMap,_width=new WeakMap,_name=new WeakMap,_middleware$1=new WeakMap,_middlewareChain=new WeakMap,_trailer=new WeakMap,_trailerwareChain=new WeakMap,_commonflags=new WeakMap,_display=new WeakMap,_hasCustomDefaultHandler=new WeakMap,_defaultHandler=new WeakMap;class Base{constructor(cfg={}){if(_plugins.set(this,{writable:!0,value:{}}),_url.set(this,{writable:!0,value:null}),_support.set(this,{writable:!0,value:null}),_formattedDefaultHelp.set(this,{writable:!0,value:void 0}),_description.set(this,{writable:!0,value:void 0}),_customUsage.set(this,{writable:!0,value:void 0}),_customHelp.set(this,{writable:!0,value:void 0}),_arguments.set(this,{writable:!0,value:new Set}),_autohelp.set(this,{writable:!0,value:!0}),_processors.set(this,{writable:!0,value:new Map}),_commands.set(this,{writable:!0,value:new Map}),_width.set(this,{writable:!0,value:80}),_name.set(this,{writable:!0,value:"Unknown"}),_middleware$1.set(this,{writable:!0,value:new Middleware}),_middlewareChain.set(this,{writable:!0,value:[]}),_trailer.set(this,{writable:!0,value:new Middleware}),_trailerwareChain.set(this,{writable:!0,value:[]}),_commonflags.set(this,{writable:!0,value:{}}),_display.set(this,{writable:!0,value:{Default:null,Options:null,MultipleValues:null,Required:null}}),_hasCustomDefaultHandler.set(this,{writable:!0,value:!1}),_defaultHandler.set(this,{writable:!0,value:function(meta){return null!==this.parent&&this.parent.hasCustomDefaultHandler?this.parent.defaultHandler(...arguments):this.shell&&null!==this.shell&&this.shell.hasCustomDefaultHandler?this.shell.defaultHandler(...arguments):void(_classPrivateFieldGet$2(this,_autohelp)&&console.log(this.help))}}),"object"!=typeof cfg)throw new Error("Invalid command configuration. Expected an object.");if(!cfg.hasOwnProperty("name"))throw new Error('Invalid command configuration. A "name" attribute is required.');if(cfg.hasOwnProperty("help")&&_classPrivateFieldSet$2(this,_customHelp,cfg.help),cfg.hasOwnProperty("usage")&&_classPrivateFieldSet$2(this,_customUsage,cfg.usage),cfg.hasOwnProperty("disablehelp")&&!cfg.hasOwnProperty("disableHelp")&&(cfg.disableHelp=cfg.disablehelp),cfg.hasOwnProperty("disableHelp")&&!0===cfg.disableHelp&&_classPrivateFieldSet$2(this,_autohelp,!1),"function"!=typeof cfg.help&&"string"!=typeof cfg.help||(this.help=cfg.help),"function"!=typeof cfg.usage&&"string"!=typeof cfg.usage||(this.usage=cfg.usage),cfg.hasOwnProperty("defaultHandler")&&cfg.defaultHandler.toString()!==_classPrivateFieldGet$2(this,_defaultHandler).toString()&&(this.defaultHandler=cfg.defaultHandler),"string"==typeof cfg.arguments&&(cfg.arguments=cfg.arguments.split(/\s+|\t+|\,+|\;+/).map(arg=>arg.trim())),Array.isArray(cfg.arguments)&&_classPrivateFieldSet$2(this,_arguments,new Set(cfg.arguments)),"string"==typeof cfg.url&&_classPrivateFieldSet$2(this,_url,cfg.url),"string"==typeof cfg.support&&_classPrivateFieldSet$2(this,_support,cfg.support),_classPrivateFieldSet$2(this,_name,(cfg.name||"unknown").trim().split(/\s+/)[0]),_classPrivateFieldSet$2(this,_description,cfg.description||null),Array.isArray(cfg.commands))cfg.commands.forEach(cmd=>this.add(cmd));else if("object"==typeof cfg.commands)for(const key in cfg.commands){const data=cfg.commands[key];data.name=key,this.add(data)}if(cfg.hasOwnProperty("middleware")&&(console.warn('The "middleware" attribute has been replaced with the "use" attribute.'),cfg.use=cfg.middleware,delete cfg.middleware),cfg.hasOwnProperty("commonflag")||(cfg.hasOwnProperty("commonFlag")?cfg.commonflag=cfg.commonFlag:cfg.hasOwnProperty("commonflags")?cfg.commonflag=cfg.commonflags:cfg.hasOwnProperty("commonFlag")?cfg.commonflag=cfg.commonFlag:cfg.hasOwnProperty("commonFlags")&&(cfg.commonflag=cfg.commonFlags)),cfg.hasOwnProperty("commonflag")&&"object"!=typeof cfg.commonflag)throw new Error('The "commonflag" configuration attribute must be an object.');"object"==typeof cfg.plugins&&_classPrivateFieldSet$2(this,_plugins,cfg.plugins),Object.defineProperties(this,{__processors:{enumerable:!1,get(){return _classPrivateFieldGet$2(this,_processors)}},__commands:{enumerable:!1,get(){return _classPrivateFieldGet$2(this,_commands)}},__width:{enumerable:!1,get(){return _classPrivateFieldGet$2(this,_width)},set(v){_classPrivateFieldSet$2(this,_width,v||80)}},__commonflags:{enumerable:!1,get(){return _classPrivateFieldGet$2(this,_commonflags)},set(value){_classPrivateFieldSet$2(this,_commonflags,value)}},arguments:{enumerable:!1,get(){return _classPrivateFieldGet$2(this,_arguments)}},applyMiddleware:{enumerable:!1,configurable:!1,writable:!1,value:()=>_classPrivateFieldGet$2(this,_middlewareChain).forEach(mw=>_classPrivateFieldGet$2(this,_middleware$1).use(mw))},applyTrailerware:{enumerable:!1,configurable:!1,writable:!1,value:()=>{_classPrivateFieldSet$2(this,_trailer,_classPrivateFieldGet$2(this,_trailer)||new Middleware),_classPrivateFieldGet$2(this,_trailerwareChain).forEach(mw=>_classPrivateFieldGet$2(this,_trailer).use(mw))}},initializeMiddleware:{enumerable:!1,configurable:!1,writable:!1,value:code=>this.use(this.normalizeMiddleware(code))},normalizeMiddleware:{enumerable:!1,configurable:!1,writable:!1,value:(code,type="middleware")=>{if("string"==typeof code)return Function("return "+code)();if("function"==typeof code)return code;throw new Error(`Invalid ${type}: `+code.toString())}},initializeTrailer:{enumerable:!1,configurable:!1,writable:!1,value:code=>this.trailer(this.normalizeMiddleware(code,"trailer"))},initializeHelpAnnotations:{enumerable:!1,configurable:!1,writable:!1,value:cfg=>{cfg.hasOwnProperty("describeDefault")&&"boolean"==typeof cfg.describeDefault&&(_classPrivateFieldGet$2(this,_display).Default=cfg.describeDefault),cfg.hasOwnProperty("describeOptions")&&"boolean"==typeof cfg.describeOptions&&(_classPrivateFieldGet$2(this,_display).Options=cfg.describeOptions),cfg.hasOwnProperty("describeMultipleValues")&&"boolean"==typeof cfg.describeMultipleValues&&(_classPrivateFieldGet$2(this,_display).MultipleValues=cfg.describeMultipleValues),cfg.hasOwnProperty("describeRequired")&&"boolean"==typeof cfg.describeRequired&&(_classPrivateFieldGet$2(this,_display).Required=cfg.describeRequired)}}}),this.updateHelp()}get plugins(){return _classPrivateFieldGet$2(this,_plugins)}get name(){return _classPrivateFieldGet$2(this,_name)||"Unknown"}get description(){return _classPrivateFieldGet$2(this,_description)||this.usage||""}get url(){return this.URL}get URL(){const uri=(_classPrivateFieldGet$2(this,_url)||"").trim();if(0===uri.length){if(this.hasOwnProperty("parent"))return this.parent.URL;if(this instanceof Command)return this.shell.URL}return uri}get support(){const support=(_classPrivateFieldGet$2(this,_support)||"").trim();if(0===support.length){if(this.hasOwnProperty("parent"))return this.parent.support;if(this instanceof Command)return this.shell.support}return support}get autohelp(){return _classPrivateFieldGet$2(this,_autohelp)}set autohelp(value){"boolean"==typeof value&&(_classPrivateFieldSet$2(this,_autohelp,value),_classPrivateFieldGet$2(this,_processors).forEach(cmd=>{cmd.autohelp=value}))}updateHelp(){_classPrivateFieldSet$2(this,_formattedDefaultHelp,new Formatter(this)),_classPrivateFieldGet$2(this,_formattedDefaultHelp).width=_classPrivateFieldGet$2(this,_width)}describeHelp(attr,prop){if(null!==_classPrivateFieldGet$2(this,_display)[prop])return _classPrivateFieldGet$2(this,_display)[prop];if(this instanceof Command){if(this.shell&&null!==this.shell&&null!==this.shell[attr])return this.shell[attr];if(null!==this.parent)return this.parent[attr]}return!0}get describeDefault(){return this.describeHelp("describeDefault","Default")}get describeOptions(){return this.describeHelp("describeOptions","Options")}get describeMultipleValues(){return this.describeHelp("describeMultipleValues","MultipleValues")}get describeRequired(){return this.describeHelp("describeRequired","Required")}get usage(){return null!==_classPrivateFieldGet$2(this,_customUsage)?"function"==typeof _classPrivateFieldGet$2(this,_customUsage)?_classPrivateFieldGet$2(this,_customUsage).call(this):_classPrivateFieldGet$2(this,_customUsage):_classPrivateFieldGet$2(this,_formattedDefaultHelp).usage}set usage(value){"string"==typeof value&&0===value.trim().length&&(value=null),_classPrivateFieldSet$2(this,_customUsage,value),this.updateHelp()}get help(){return _classPrivateFieldGet$2(this,_customHelp)?"function"==typeof _classPrivateFieldGet$2(this,_customHelp)?_classPrivateFieldGet$2(this,_customHelp).call(this,this):_classPrivateFieldGet$2(this,_customHelp):this.autohelp?_classPrivateFieldGet$2(this,_formattedDefaultHelp).help:""}set help(value){"string"==typeof value&&0===value.trim().length&&(value=null),_classPrivateFieldSet$2(this,_customHelp,value),this.updateHelp()}set defaultHandler(value){if("function"!=typeof value)throw new Error(`Invalid default method (must be a function, not "${typeof value}").`);_classPrivateFieldSet$2(this,_defaultHandler,value),_classPrivateFieldSet$2(this,_hasCustomDefaultHandler,!0),_classPrivateFieldGet$2(this,_processors).forEach(cmd=>{cmd.defaultProcessor=value})}get defaultHandler(){return _classPrivateFieldGet$2(this,_defaultHandler)}get hasCustomDefaultHandler(){return _classPrivateFieldGet$2(this,_hasCustomDefaultHandler)}get data(){const commands={};return Array.from(_classPrivateFieldGet$2(this,_processors).values()).forEach(cmd=>{const data=cmd.data,name=data.name;delete data.name,commands[name]=data}),commands}get middleware(){return _classPrivateFieldGet$2(this,_middleware$1)}get trailers(){return _classPrivateFieldGet$2(this,_trailer)}get commands(){return _classPrivateFieldGet$2(this,_processors)}get commandlist(){const list=new Set;return this.commands.forEach(cmd=>{list.add(cmd.name),cmd.commandlist.forEach(subcmd=>list.add(`${cmd.name} ${subcmd}`))}),Array.from(list).sort()}getCommand(name=null){if(!name)return null;const names=name.split(/\s+/i);let cmd=_classPrivateFieldGet$2(this,_commands).get(names.shift());if(cmd){cmd=_classPrivateFieldGet$2(this,_processors).get(cmd);for(const nm of names)cmd=cmd.getCommand(nm)}return cmd instanceof Command?cmd:null}remove(){for(const cmd of arguments)if("symbol"==typeof cmd&&(_classPrivateFieldGet$2(this,_processors).delete(cmd),_classPrivateFieldGet$2(this,_commands).forEach(oid=>oid===cmd&&_classPrivateFieldGet$2(this,_commands).delete(oid))),"string"==typeof cmd){const OID=_classPrivateFieldGet$2(this,_commands).get(cmd);OID&&this.remove(OID)}}use(){for(const arg of arguments){if("function"!=typeof arg)throw new Error(`All "use()" arguments must be valid functions.\n${arg.toString().substring(0,50)} ${arg.toString().length>50?"...":""}`);_classPrivateFieldGet$2(this,_middlewareChain).push(arg)}_classPrivateFieldGet$2(this,_processors).forEach(subCmd=>subCmd.use(...arguments))}trailer(){for(const arg of arguments){if("function"!=typeof arg)throw new Error(`All "trailer()" arguments must be valid functions.\n${arg.toString().substring(0,50)} ${arg.toString().length>50?"...":""}`);_classPrivateFieldGet$2(this,_trailerwareChain).push(arg)}_classPrivateFieldGet$2(this,_processors).forEach(subCmd=>subCmd.trailer(...arguments))}add(){for(let command of arguments){if(!(command instanceof Command)){if("object"!=typeof command)throw new Error('Invalid argument. Only "Command" instances may be added to the processor.');command=new Command(command)}command.autohelp=this.autohelp,this instanceof Shell?command.shell=this:this instanceof Command&&(command.parent=this),_classPrivateFieldGet$2(this,_processors).set(command.OID,command),_classPrivateFieldGet$2(this,_commands).set(command.name,command.OID),command.aliases.forEach(alias=>_classPrivateFieldGet$2(this,_commands).set(alias,command.OID))}}}const FLAG_PATTERN=/((?:"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'|\/[^\/\\]*(?:\\[\S\s][^\/\\]*)*\/[gimy]*(?=\s|$)|(?:\\\s|\S))+)(?=\s|$)/g,METHOD_PATTERN=/^([\w]+\s?)\(.*\)\s?{/i,STRIP_QUOTE_PATTERN=/"([^"\\]*(\\.[^"\\]*)*)"|\'([^\'\\]*(\\.[^\'\\]*)*)\'/gi,COMMAND_PATTERN=/^(\w+)\s+([\s\S]+)?/i;Object.freeze({SUBCOMMAND_PATTERN:/^([^"'][\S\b]+)[\s+]?([^-].*)$/i,FLAG_PATTERN:FLAG_PATTERN,METHOD_PATTERN:METHOD_PATTERN,STRIP_QUOTE_PATTERN:STRIP_QUOTE_PATTERN,COMMAND_PATTERN:COMMAND_PATTERN});var _middlewareGroups=new WeakMap,_history=new WeakMap,_maxHistoryItems=new WeakMap,_version=new WeakMap,_cursor=new WeakMap,_tabWidth=new WeakMap,_middleware=new WeakMap,_runtime=new WeakMap;class Shell extends Base{constructor(cfg={maxhistory:100}){super(cfg),_middlewareGroups.set(this,{writable:!0,value:new Map}),_history.set(this,{writable:!0,value:[]}),_maxHistoryItems.set(this,{writable:!0,value:void 0}),_version.set(this,{writable:!0,value:void 0}),_cursor.set(this,{writable:!0,value:0}),_tabWidth.set(this,{writable:!0,value:void 0}),_middleware.set(this,{writable:!0,value:[]}),_runtime.set(this,{writable:!0,value:globalThis.hasOwnProperty("window")?"browser":globalThis.hasOwnProperty("process")&&globalThis.process.release&&globalThis.process.release.name?globalThis.process.release.name:"unknown"}),this.initializeHelpAnnotations(cfg),this.__commonflags=cfg.commonflags||{},cfg.hasOwnProperty("use")&&Array.isArray(cfg.use)&&cfg.use.forEach(code=>_classPrivateFieldGet$2(this,_middleware).push(this.normalizeMiddleware(code))),cfg.hasOwnProperty("trailer")&&Array.isArray(cfg.trailer)&&cfg.trailer.forEach(code=>this.initializeTrailer(code)),_classPrivateFieldSet$2(this,_version,cfg.version||"1.0.0"),_classPrivateFieldSet$2(this,_maxHistoryItems,cfg.maxhistory||cfg.maxHistoryItems||100),_classPrivateFieldSet$2(this,_tabWidth,cfg.hasOwnProperty("tabWidth")?cfg.tabWidth:4),globalThis[Symbol("SHELL_INTEGRATIONS")]=this}get data(){const commands=super.data;return{name:this.name,description:this.description,version:this.version,commands:commands,use:this.middleware.data,trailer:this.trailers.data,help:this.help,usage:this.usage,defaultHandler:this.defaultHandler.toString(),disableHelp:!this.autohelp,runtime:_classPrivateFieldGet$2(this,_runtime),maxHistoryItems:_classPrivateFieldGet$2(this,_maxHistoryItems)}}get version(){return _classPrivateFieldGet$2(this,_version)||"Unknown"}set tableWidth(value){this.__width=value}get tableWidth(){return this.__width}history(count=null){return 0===_classPrivateFieldGet$2(this,_history).length?[]:null===count?_classPrivateFieldGet$2(this,_history).slice():_classPrivateFieldGet$2(this,_history).slice(0,count)}priorCommand(count=0){return 0===_classPrivateFieldGet$2(this,_history).length?null:count<0?this.nextCommand(Math.abs(count)):(count%=_classPrivateFieldGet$2(this,_history).length,_classPrivateFieldSet$2(this,_cursor,_classPrivateFieldGet$2(this,_cursor)+count),_classPrivateFieldGet$2(this,_cursor)>=_classPrivateFieldGet$2(this,_history).length&&_classPrivateFieldSet$2(this,_cursor,_classPrivateFieldGet$2(this,_history).length-1),_classPrivateFieldGet$2(this,_history)[_classPrivateFieldGet$2(this,_cursor)].input)}nextCommand(count=1){return 0===_classPrivateFieldGet$2(this,_history).length?null:count<0?this.priorCommand(Math.abs(count)):(count%=_classPrivateFieldGet$2(this,_history).length,_classPrivateFieldSet$2(this,_cursor,_classPrivateFieldGet$2(this,_cursor)-count),_classPrivateFieldGet$2(this,_cursor)<0?void _classPrivateFieldSet$2(this,_cursor,0):_classPrivateFieldGet$2(this,_history)[_classPrivateFieldGet$2(this,_cursor)].input)}useWith(commands){if(arguments.length<2)throw new Error("useWith(['command', 'command'], fn) requires two or more arguments.");if(commands="string"==typeof commands?commands.split(/\s+/):commands,!Array.isArray(commands)||commands.filter(c=>"string"!=typeof c).length>0)throw new Error("The first argument of useWith must be a string or array of strings. Received "+typeof commands);const fns=Array.from(arguments).slice(1);commands.forEach(cmd=>_classPrivateFieldGet$2(this,_middlewareGroups).set(cmd.trim(),(_classPrivateFieldGet$2(this,_middlewareGroups).get(cmd.trim())||[]).concat(fns)))}useExcept(commands){if(arguments.length<2)throw new Error("useExcept(['command', 'command'], fn) requires two or more arguments.");if(commands="string"==typeof commands?commands.split(/\s+/):commands,!Array.isArray(commands)||commands.filter(c=>"string"!=typeof c).length>0)throw new Error("The first argument of useExcept must be a string or array of strings. Received "+typeof commands);const fns=Array.from(arguments).slice(1),all=new Set(this.commandlist.map(i=>i.toLowerCase()));commands.forEach(cmd=>{all.delete(cmd);for(const c of all)0===c.indexOf(cmd)&&all.delete(c)}),this.useWith(Array.from(all),...fns)}async exec(input,callback){let reference;if("object"==typeof callback){if(!callback.hasOwnProperty("reference")&&!callback.hasOwnProperty("callback"))throw new Error("exec method data references require a reference and/or callback attribute - recognized: "+Object.keys(callback).join(", "));reference=callback.reference,callback=callback.callback}Array.isArray(input)&&(input=input.map(i=>i.indexOf(" ")>=0&&!/^[\"\'].+ [\"\']$/.test(i)?`"${i}"`:i).join(" ")),_classPrivateFieldGet$2(this,_history).unshift({input:input,time:(new Date).toLocaleString()}),_classPrivateFieldGet$2(this,_history).length>_classPrivateFieldGet$2(this,_maxHistoryItems)&&_classPrivateFieldGet$2(this,_history).pop();let parsed=COMMAND_PATTERN.exec(input+" ");if(null===parsed)return-1!==input.indexOf("version")||-1!==input.indexOf("-v")?console.log(this.version):-1!==input.indexOf("help")?console.log(this.help):Command.stderr(this.help);parsed=parsed.filter(item=>void 0!==item);const cmd=parsed[1],args=parsed.length>2?parsed[2]:"",action=this.__commands.get(cmd);if(!action)return"version"===cmd.toLowerCase()?console.log(this.version):Command.stderr(this.help);const processor=this.__processors.get(action);if(!processor)return Command.stderr("Command not found.");const term=processor.getTerminalCommand(args);return"function"==typeof callback?callback(await Command.reply(await term.command.run(term.arguments,callback,reference))):await Command.reply(await term.command.run(term.arguments,callback,reference))}get shellware(){return _classPrivateFieldGet$2(this,_middleware)}getCommandMiddleware(cmd){const results=[];return cmd.split(/\s+/).forEach((c,i,a)=>{const r=_classPrivateFieldGet$2(this,_middlewareGroups).get(a.slice(0,i+1).join(" "));r&&results.push(r.flat(1/0))}),results.flat(1/0)}clearHistory(){_classPrivateFieldSet$2(this,_history,[])}clear(){_classPrivateFieldSet$2(this,_history,[]),console.clear()}}var _pattern=new WeakMap,_oid=new WeakMap,_aliases=new WeakMap,_fn=new WeakMap,_flagConfig=new WeakMap,_parent=new WeakMap,_shell=new WeakMap;class Command extends Base{constructor(cfg={}){if(cfg.hasOwnProperty("handler")&&("string"==typeof cfg.handler&&(cfg.handler=Function("return ("+cfg.handler.replace("function anonymous","function")+").call(this)").call(globalThis)),"function"!=typeof cfg.handler))throw new Error('Invalid command configuration. A "handler" function is required.');if(super(cfg),_pattern.set(this,{writable:!0,value:void 0}),_oid.set(this,{writable:!0,value:void 0}),_aliases.set(this,{writable:!0,value:new Set}),_fn.set(this,{writable:!0,value:void 0}),_flagConfig.set(this,{writable:!0,value:{}}),_parent.set(this,{writable:!0,value:null}),_shell.set(this,{writable:!0,value:null}),cfg.hasOwnProperty("use")&&Array.isArray(cfg.use)&&cfg.use.forEach(code=>this.initializeMiddleware(code)),cfg.hasOwnProperty("trailer")&&Array.isArray(cfg.trailer)&&cfg.trailer.forEach(code=>this.initializeTrailer(code)),this.initializeHelpAnnotations(cfg),_classPrivateFieldSet$2(this,_fn,cfg.handler),_classPrivateFieldSet$2(this,_oid,Symbol(cfg.name||cfg.usage||cfg.pattern||"command")),_classPrivateFieldSet$2(this,_pattern,cfg.pattern||/[\s\S]+/i),cfg.alias&&!cfg.aliases&&(cfg.aliases="string"==typeof cfg.alias?[cfg.alias]:Array.isArray(cfg.alias)?cfg.alias:Array.from(cfg.alias),delete cfg.alias),cfg.aliases){if(!Array.isArray(cfg.aliases))throw new Error("The alias property only accepts an array.");_classPrivateFieldSet$2(this,_aliases,new Set(cfg.aliases))}if(cfg.flags){if("object"!=typeof cfg.flags)throw new Error(`Invalid flag configuration (expected and object, received ${typeof cfg.flags}).`);for(const[key,value]of Object.entries(cfg.flags))if(value.hasOwnProperty("alias")){if(value.aliases=value.aliases||[],Array.isArray(value.alias)){if(value.aliases=Array.from(new Set(...value.aliases,...value.alias)),value.aliases.filter(a=>"string"!=typeof a)>0)throw new Error(`${key} flag aliases must be strings. Type failure on: ${value.aliases.filter(a=>"string"!=typeof a).join(", ")}.`)}else{if("string"!=typeof value.alias)throw new Error(`Aliases must be strings, not ${typeof value.alias} (${key} flag).`);value.aliases.push(value.alias)}delete value.alias}_classPrivateFieldSet$2(this,_flagConfig,cfg.flags)}Array.isArray(cfg.subcommands)&&this.add(...cfg.subcommands);const attributes=new Set(["commands","subcommands","plugins","defaultHandler","disableHelp","describeDefault","describeOptions","describeMultipleValues","describeRequired","flags","alias","aliases","description","help","usage","pattern","name","handler","middleware","use","arguments","commonflag","commonflags","trailer","url","support"]),unrecognized=Object.keys(cfg).filter(attribute=>!attributes.has(attribute));if(unrecognized.length>0)throw new Error("Unrecognized configuration attribute(s): "+unrecognized.join(", "));const ignoreFlags=commonFlags=>{if(commonFlags.ignore&&(Array.isArray(commonFlags.ignore)||"string"==typeof commonFlags.ignore)){const ignore=new Set(Array.isArray(commonFlags.ignore)?commonFlags.ignore:[commonFlags.ignore]),root=this.commandroot.replace(new RegExp(`^${this.shell.name}\\s+`,"i"),"");for(const cmd of ignore)if(root.startsWith(cmd)){commonFlags={};break}}return commonFlags};Object.defineProperties(this,{__commonFlags:{enumerable:!1,get(){let flags=ignoreFlags(this.__commonflags);null!==this.parent&&(flags=Object.assign(flags,this.parent.__commonFlags));const result=Object.assign({},null!==this.shell?ignoreFlags(this.shell.__commonflags):{},flags);return(Array.isArray(result.ignore)||"string"==typeof result.ignore)&&delete result.ignore,result}},__flagConfig:{enumerable:!1,get(){const flags=new Map(Object.entries(Object.assign(this.__commonFlags,_classPrivateFieldGet$2(this,_flagConfig)||{})));return flags.delete("help"),flags}},getTerminalCommand:{enumerable:!1,configurable:!1,writable:!1,value:input=>{const args=input.trim().split(/\t+|\s+/);let cmd=this;for(;args.length>0;){const arg=args[0],subcmd=cmd.getCommand(arg);if(!subcmd)break;cmd=subcmd,args.shift()}return{command:cmd,arguments:args.join(" ")}}}}),this.__commonflags=cfg.commonflags||{},this.__width=null===this.shell?80:this.shell.tableWidth||80,this.updateHelp()}get data(){const commands=super.data;let handler=(_classPrivateFieldGet$2(this,_fn)||this.defaultHandler).toString();METHOD_PATTERN.test(handler)&&(handler=handler.replace(METHOD_PATTERN.exec(handler)[1],"function "));const flags=Object.assign(this.__commonFlags,_classPrivateFieldGet$2(this,_flagConfig)||{});for(const[key,value]of Object.entries(flags))value.aliases=value.aliases||[],value.hasOwnProperty("alias")&&value.aliases.indexOf(value.alias)<0&&value.aliases.push(value.alias),delete value.alias;Object.keys(flags).forEach(name=>{flags[name]=Object.assign(this.getFlagConfiguration(name),flags[name])});const data={name:this.name,description:this.description,help:this.help,usage:this.usage,aliases:Array.from(_classPrivateFieldGet$2(this,_aliases)),flags:flags,handler:handler,commands:commands,disableHelp:!this.autohelp,use:this.middleware.data,trailer:this.trailers.data};for(const[key,value]of Object.entries(data.flags))delete value.alias;return data}set parent(cmd){if(!(cmd instanceof Command))throw new Error(`Cannot set parent of "${this.name}" command to anything other than another command. To make this command a direct descendent of the main shell, use the shell attribute instead.`);_classPrivateFieldSet$2(this,_parent,cmd)}get parent(){return _classPrivateFieldGet$2(this,_parent)}set shell(shell){if(!shell)throw new Error(`Cannot set shell of ${this.name} command to a non-Shell object.`);if(!(shell instanceof Shell))throw new Error(`Expected a Shell object, received a "${typeof shell}" object.`);_classPrivateFieldSet$2(this,_shell,shell),this.__width=null===this.shell?80:shell.tableWidth}get shell(){return _classPrivateFieldGet$2(this,_shell)?_classPrivateFieldGet$2(this,_shell):_classPrivateFieldGet$2(this,_parent)?_classPrivateFieldGet$2(this,_parent).shell:null}get plugins(){return Object.assign({},this.shell.plugins,this.parent?this.parent.plugins:{},super.plugins)}get commandroot(){return _classPrivateFieldGet$2(this,_parent)?`${_classPrivateFieldGet$2(this,_parent).commandroot} ${this.name}`.trim():_classPrivateFieldGet$2(this,_shell)?`${_classPrivateFieldGet$2(this,_shell).name} ${this.name}`.trim():this.name}set aliases(value){if(value){if("object"==typeof value)switch(value.constructor.name.toLowerCase()){case"map":value=Array.from(value.keys());break;case"set":value=Array.from(value);break;case"object":value=Object.keys(value).filter(item=>"string"==typeof item);break;case"array":break;case"string":value=value.split(/\s+/)[0];break;default:throw new Error("Invalid alias value. Use an array of strings.")}_classPrivateFieldSet$2(this,_aliases,Array.from(new Set(value)))}else _classPrivateFieldSet$2(this,_aliases,[])}get aliases(){return Array.from(_classPrivateFieldGet$2(this,_aliases))||[]}get OID(){return _classPrivateFieldGet$2(this,_oid)}addFlag(name,cfg){if("string"!=typeof name){if(!cfg.hasOwnProperty("name"))throw new Error("Invalid flag name (should be a string).");name=cfg.name}_classPrivateFieldGet$2(this,_flagConfig)[name]=cfg}removeFlag(name){delete _classPrivateFieldGet$2(this,_flagConfig)[name]}getFlagConfiguration(name){let flag=this.__flagConfig.get(name);if(!flag){for(const[f,cfg]of this.__flagConfig)if(cfg.aliases&&cfg.aliases.indexOf(name)>=0||cfg.alias&&cfg.alias===flag){flag=cfg;break}if(!flag)return null}return{description:flag.description,required:!!flag.hasOwnProperty("required")&&flag.required,aliases:flag.aliases||[flag.alias].filter(i=>null!==i),type:void 0===flag.type?"string":"string"==typeof flag.type?flag.type:flag.type.name.toLowerCase(),options:flag.hasOwnProperty("options")?flag.options:null,allowMultipleValues:!!flag.hasOwnProperty("allowMultipleValues")&&flag.allowMultipleValues}}supportsFlag(name){return _classPrivateFieldGet$2(this,_flagConfig).hasOwnProperty(name)}deepParse(input){const meta=this.parse(input);if(0===this.__commands.size)return meta;if(0===meta.input.trim().length)return meta;const args=meta.input.split(/\s+/),subcmd=this.__commands.get(args.shift());return subcmd?this.__processors.get(subcmd).deepParse(args.join(" ")):meta}parse(input){const data={command:this.name,input:input.trim()},flagConfig=Object.assign(this.__commonFlags,_classPrivateFieldGet$2(this,_flagConfig)||{});flagConfig.hasOwnProperty("help")||(flagConfig.help={description:`Display ${this.name} help.`,default:!1,type:"boolean"});const flags=Array.from(FLAG_PATTERN[Symbol.matchAll](input),x=>x[0]),parser=new Parser(flags,flagConfig),pdata=parser.data,recognized={};if(parser.recognizedFlags.forEach(flag=>{recognized[flag]=pdata[flag]}),parser.unrecognizedFlags.forEach(arg=>delete recognized[arg]),data.flags={recognized:recognized,unrecognized:parser.unrecognizedFlags},data.valid=parser.valid,data.violations=parser.violations,data.parsed={},Object.keys(pdata.flagSource).length>0)for(const[key,src]of Object.entries(pdata.flagSource))data.parsed[src.name]=src.inputName;data.help={requested:recognized.help},recognized.help&&(data.help.message=this.help);const args=Array.from(this.arguments);return Object.defineProperties(data,{flag:{enumerable:!0,configurable:!1,writable:!1,value:name=>{try{return"number"==typeof name?Array.from(parser.unrecognizedFlags)[name]:data.flags.recognized.hasOwnProperty(pdata.flagSource[name].name)?data.flags.recognized[pdata.flagSource[name].name]:pdata.flagSource[name].value}catch(e){return this.arguments.has(name)?Array.from(parser.unrecognizedFlags)[args.indexOf(name)]:void 0}}},command:{enumerable:!0,get:()=>this},shell:{enumerable:!0,get:()=>this.shell},data:{enumerable:!0,get(){const uf=parser.unrecognizedFlags,result=Object.assign({},recognized);return delete result.help,args.forEach((name,i)=>{const value=uf[i];let normalizedValue=Object.keys(pdata).filter(key=>key.toLowerCase()===value);normalizedValue=normalizedValue.length>0?normalizedValue.pop():value,void 0!==normalizedValue&&(normalizedValue=normalizedValue.trim(),STRIP_QUOTE_PATTERN.test(normalizedValue)&&(normalizedValue=normalizedValue.substring(1,normalizedValue.length-1))),result.hasOwnProperty(name)?(result[name]=Array.isArray(result[name])?result[name]:[result[name]],result[name].push(normalizedValue)):result[name]=normalizedValue}),uf.length>args.length&&uf.slice(args.length).forEach((flag,i)=>{let name="unknown"+(i+1);for(;result.hasOwnProperty(name);){const number=name.substring(7);name="unknown"+(parseInt(number)+1)}result[name]=flag}),result}}}),Object.defineProperty(data.help,"default",{enumerable:!0,get:()=>this.help}),data}async run(input,callback,reference){const fn=(_classPrivateFieldGet$2(this,_fn)||this.defaultHandler).bind(this),metadata="string"==typeof input?this.parse(input):input;if(arguments[0]=this.deepParse(input),arguments[0].plugins=this.plugins,null!==this.shell){const{shellware:shellware}=this.shell;shellware.length>0&&this.middleware.use(...shellware);const parentMiddleware=this.shell.getCommandMiddleware(this.commandroot.replace(new RegExp("^"+this.shell.name,"i"),"").trim());parentMiddleware.length>0&&this.middleware.use(...parentMiddleware)}this.applyMiddleware(),this.applyTrailerware();const trailers=this.trailers;if(arguments[0].help&&arguments[0].help.requested)return console.log(this.help),void(trailers.size>0&&trailers.run(arguments[0]));if(this.middleware.size>0)return this.middleware.run(arguments[0],async meta=>await Command.reply(fn(Object.assign(meta,{reference:reference}),callback))),void(trailers.size>0&&trailers.run(arguments[0]));metadata.plugins=this.plugins;const result=await Command.reply(fn(Object.assign(metadata,{reference:reference}),callback));return trailers.size>0&&trailers.run(arguments[0]),result}static stderr(err){return Error,new Promise((resolve,reject)=>reject(err)).catch(console.error)}static reply(callback){return new Promise(async(resolve,reject)=>{try{"function"==typeof callback?resolve(callback()):callback instanceof Promise?callback.then(resolve).catch(reject):resolve(...arguments)}catch(e){reject(e)}})}}const all={Shell:Shell,Command:Command,Formatter:Formatter,Table:Table,Middleware:Middleware};export default all;export{Command,Formatter,Middleware,Shell,Table};
//# sourceMappingURL=../shell-debug/index.js.map
