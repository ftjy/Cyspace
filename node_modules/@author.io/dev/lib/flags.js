export default {
  runtime: {
    alias: 'rt',
    description: 'The runtime to build for. This does not do anything by default, but will provide an environment variable called RUNTIME to the internal build process (which can be overridden).',
    options: ['node', 'browser', 'deno'],
    default: 'node'
  },
  ignorecircular: {
    alias: 'ic',
    description: 'Ignore the specified circular dependency.',
    type: 'string',
    allowMultipleValues: true
  },
  keepconsole: {
    alias: 'kc',
    description: 'Keep console.log and other console operations during minification. Console operations are dropped by default.',
    type: 'boolean'
  },
  replace: {
    description: 'A key/value pair representing a text value to replace in the final output. For example, "VERSION=2.0.0". Any top-level (not nested) attribute of the package.json file can be referenced using the package prefix. For example, "VERSION=package.version" will automatically replace the "VERSION" string in the code with the version number specified in the package file. The text representation of a function can be specified using the fn: prefix, such as "DATE=fn:() => new Date()"',
    type: 'string',
    allowMultipleValues: true
  },
  external: {
    alias: 'ext',
    description: 'Instruct the build tool to treat an import as an external dependency.',
    type: 'string',
    allowMultipleValues: true
  },
  buildoption: {
    alias: ['opt', 'o'],
    description: 'Specify a Rollup build option.',
    type: 'string',
    allowMultipleValues: true
  },
  embed: {
    description: 'A list of modules which should be embedded in the build process (i.e. NOT treated as external modules).',
    type: 'string',
    allowMultipleValues: true
  }
}
